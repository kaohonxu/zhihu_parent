<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhihu.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.zhihu.domain.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publishing" jdbcType="VARCHAR" property="publishing" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="catalogueId" jdbcType="INTEGER" property="catalogueid" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zhihu.domain.Book">
    <result column="synopsis" jdbcType="LONGVARCHAR" property="synopsis" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, author, publishing, price, size, address, count, time, img, userId, catalogueId, 
    typeId
  </sql>
  <sql id="Blob_Column_List">
    synopsis
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zhihu.domain.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zhihu.domain.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhihu.domain.BookExample">
    delete from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhihu.domain.Book">
    insert into t_book (id, name, author, 
      publishing, price, size, 
      address, count, time, 
      img, userId, catalogueId, 
      typeId, synopsis)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publishing,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{size,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{img,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{catalogueid,jdbcType=INTEGER}, 
      #{typeid,jdbcType=INTEGER}, #{synopsis,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhihu.domain.Book">
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publishing != null">
        publishing,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="catalogueid != null">
        catalogueId,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="synopsis != null">
        synopsis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishing != null">
        #{publishing,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="catalogueid != null">
        #{catalogueid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="synopsis != null">
        #{synopsis,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhihu.domain.BookExample" resultType="java.lang.Long">
    select count(*) from t_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publishing != null">
        publishing = #{record.publishing,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.catalogueid != null">
        catalogueId = #{record.catalogueid,jdbcType=INTEGER},
      </if>
      <if test="record.typeid != null">
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.synopsis != null">
        synopsis = #{record.synopsis,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_book
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publishing = #{record.publishing,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      size = #{record.size,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      img = #{record.img,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      catalogueId = #{record.catalogueid,jdbcType=INTEGER},
      typeId = #{record.typeid,jdbcType=INTEGER},
      synopsis = #{record.synopsis,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_book
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publishing = #{record.publishing,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      size = #{record.size,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      img = #{record.img,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      catalogueId = #{record.catalogueid,jdbcType=INTEGER},
      typeId = #{record.typeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhihu.domain.Book">
    update t_book
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishing != null">
        publishing = #{publishing,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="catalogueid != null">
        catalogueId = #{catalogueid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="synopsis != null">
        synopsis = #{synopsis,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zhihu.domain.Book">
    update t_book
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publishing = #{publishing,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      size = #{size,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      img = #{img,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      catalogueId = #{catalogueid,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=INTEGER},
      synopsis = #{synopsis,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhihu.domain.Book">
    update t_book
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publishing = #{publishing,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      size = #{size,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      img = #{img,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      catalogueId = #{catalogueid,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>